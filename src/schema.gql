# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Address {
  appartament: String!
  comment: String
  house: String!
  street: String!
}

input AddressInput {
  appartament: String!
  comment: String
  house: String!
  street: String!
}

type BaseResponse {
  reason: String
  success: Boolean!
}

input CalculateDeliveryPackageDto {
  height: Float!
  length: Float!
  weight: Float!
  width: Float!
}

input CalculateDeliveryPointDto {
  latitude: Float!
  longitude: Float!
}

type CalculateDeliveryResponse {
  options: [DeliveryOption!]!
  reason: String
  success: Boolean!
}

input CreateDeliveryOrderAddressDto {
  appartament: String!
  comment: String
  house: String!
  street: String!
}

input CreateDeliveryOrderDeliveryOptionDto {
  days: Float!
  id: String!
  name: String!
  price: Float!
  type: DeliveryOptionType!
}

input CreateDeliveryOrderPersonDto {
  firstname: String!
  lastname: String!
  middlename: String
  phone: String!
}

input CreateDeliveryOrderPointDto {
  id: String!
  latitude: Float!
  longitude: String!
  name: String!
}

type DeliverResponse {
  order: Delivery!
  reason: String
  success: Boolean!
}

type DeliveriesResponse {
  deliveries: [Delivery!]!
  reason: String
  success: Boolean!
}

type Delivery {
  _id: String!
  payer: Payer!
  receiver: Person!
  receiverAddress: Address!
  receiverPoint: Point!
  sender: Person!
  senderAddress: Address!
  senderPoint: Point!
  status: DeliveryStatus!
}

input DeliveryInput {
  _id: String!
  payer: Payer!
  receiver: PersonInput!
  receiverAddress: AddressInput!
  receiverPoint: PointInput!
  sender: PersonInput!
  senderAddress: AddressInput!
  senderPoint: PointInput!
  status: DeliveryStatus!
}

type DeliveryOption {
  days: Float!
  id: String!
  name: String!
  price: Float!
  type: DeliveryOptionType!
}

enum DeliveryOptionType {
  DEFAULT
  EXPRESS
}

input DeliveryOpttionInput {
  days: Float!
  id: String!
  name: String!
  price: Float!
  type: DeliveryOptionType!
}

type DeliveryResponse {
  delivery: Delivery!
  reason: String
  success: Boolean!
}

enum DeliveryStatus {
  CANCELED
  IN_PROCESSING
  SUCCESS
}

type Mutation {
  calculateDelivery(package: CalculateDeliveryPackageDto!, receiverPoint: CalculateDeliveryPointDto!, senderPoint: CalculateDeliveryPointDto!): CalculateDeliveryResponse!
  cancelDeliveryOrder(orderId: String!): BaseResponse!
  createDeliveryOrder(option: CreateDeliveryOrderDeliveryOptionDto!, payer: Payer!, receiver: CreateDeliveryOrderPersonDto!, receiverAddress: CreateDeliveryOrderAddressDto!, receiverPoint: CreateDeliveryOrderPointDto!, sender: CreateDeliveryOrderPersonDto!, senderAddress: CreateDeliveryOrderAddressDto!, senderPoint: CreateDeliveryOrderPointDto!): DeliverResponse!
  createOtp(phone: String!): OtpResponse!
  signin(code: String!, phone: String!): UserResponse!
}

type Otp {
  _id: String!
  code: Float!
  created: String!
  phone: String!
  retryDelay: Float!
}

input OtpInput {
  _id: String!
  code: Float!
  created: String!
  phone: String!
  retryDelay: Float!
}

type OtpResponse {
  reason: String
  retryDelay: Float!
  success: Boolean!
}

type PackageType {
  height: Float!
  id: String!
  length: Float!
  name: String!
  weight: Float!
  width: Float!
}

input PackageTypeInput {
  height: Float!
  id: String!
  length: Float!
  name: String!
  weight: Float!
  width: Float!
}

type PackageTypesResponse {
  packages: [PackageType!]!
  reason: String
  success: Boolean!
}

enum Payer {
  RECEIVER
  SENDER
}

type Person {
  firstname: String!
  lastname: String!
  middlename: String
  phone: String!
}

input PersonInput {
  firstname: String!
  lastname: String!
  middlename: String
  phone: String!
}

type Point {
  id: String!
  latitude: Float!
  longitude: String!
  name: String!
}

input PointInput {
  id: String!
  latitude: Float!
  longitude: String!
  name: String!
}

type PointsResponse {
  points: [Point!]!
  reason: String
  success: Boolean!
}

type Query {
  getDeliveries: DeliveriesResponse!
  getDelivery(orderId: String!): DeliveryResponse!
  getDeliveryPackageTypes: PackageTypesResponse!
  getDeliveryPoints: PointsResponse!
  me: UserResponse!
}

type User {
  _id: String!
  city: String!
  email: String!
  firstname: String!
  lastname: String!
  middlename: String!
  phone: String!
}

input UserInput {
  _id: String!
  city: String!
  email: String!
  firstname: String!
  lastname: String!
  middlename: String!
  phone: String!
}

type UserResponse {
  reason: String
  success: Boolean!
  user: User
}